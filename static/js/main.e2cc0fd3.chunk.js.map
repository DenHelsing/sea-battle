{"version":3,"sources":["components/constants.js","helpers/helpers.js","components/overlay/overlay.js","components/overlay/index.js","components/cell/cell.js","components/cell/index.js","components/gamefield/gamefield.js","components/gamefield/index.js","components/ships/ships.js","components/custom-drag-layer/custom-drag-layer.js","components/custom-drag-layer/index.js","components/game/index.js","components/game/game.js","components/app/App.js","serviceWorker.js","index.js"],"names":["ItemTypes","BATTLESHIP","CRUISER","DESTROYER","PATROL_BOAT","parseShipLength","shipType","Number","substr","indexOf","parseShipName","substring","checkSurroundingCells","x","y","m","vectors","i","length","vector","undefined","isShip","parseId","id","_id$split","split","_id$split2","Object","slicedToArray","firstIndex","secondIndex","Overlay","React","memo","_ref","color","coord","shipLength","displacement","squareHoverStyles","opacity","position","top","left","backgroundColor","width","concat","height","zIndex","react_default","a","createElement","style","Fragment","objectSpread","overlay_OverlayToHide","OverlayToHide","_ref2","_useDrop","useDrop","accept","collect","monitor","isOver","_useDrop2","drop","ref","CellSlow","onClick","value","cellData","canDropShip","placeShip","isShot","player","isHit","isBlank","canDrop","itemType","getItemType","_useDrop2$","className","components_overlay","doNothing","defaultProps","Cell","fillWithCells","cellsData","onCellClick","cells","rows","components_cell","k","GameField","shipsData","shotsData","endturn","label","PlayersBattleField","OpponentsBattleField","AddDrag","children","_useDrag","useDrag","item","type","isDragging","_useDrag2","drag","preview","useEffect","getEmptyImage","captureDraggingState","createShip","ship","ships_AddDrag","styles","display","flexDirection","Battleship","Cruiser","Destroyer","PatrolBoat","layerStyles","pointerEvents","_imageBase","getItemStyles","initialOffset","currentOffset","clientOffset","CustomDragLayer","_useDragLayer","useDragLayer","getClientOffset","getInitialSourceClientOffset","getSourceClientOffset","shipName","src","alt","renderItem","Game","state","isYourTurn","player1ships","player1shots","player2ships","player2shots","varToChange","plusOne","_this","setState","endTurn","generateCellsData","_parseId","_parseId2","_this$state","oldShips","console","log","_parseId3","_parseId4","_this$state2","shipsName","produce","draft","_parseId5","_parseId6","makeShotToCoord","makeShot","shotsfield","endTurnMemo","onClickMemo","canDropShipMemo","placeShipMemo","this","_this$state3","components_gamefield","border","components_custom_drag_layer","PureComponent","App","esm","backend","HTML5Backend","components_game","Boolean","window","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2cc0fd3.chunk.js","sourcesContent":["export const ItemTypes = {\r\n  BATTLESHIP: \"battleship-4\",\r\n  CRUISER: \"cruiser-3\",\r\n  DESTROYER: \"destroyer-2\",\r\n  PATROL_BOAT: \"patrul_boat-1\"\r\n};\r\n","const parseShipLength = shipType => {\r\n  if (typeof shipType === \"string\") {\r\n    const shipLength = Number(shipType.substr(shipType.indexOf(\"-\") + 1, 1));\r\n\r\n    return shipLength;\r\n  }\r\n};\r\n\r\nconst parseShipName = shipType => {\r\n  if (typeof shipType === \"string\") {\r\n    const shipName = shipType.substring(0, shipType.indexOf(\"-\"));\r\n\r\n    return shipName;\r\n  }\r\n};\r\n\r\nconst checkSurroundingCells = (x, y, m) => {\r\n  const X = 0,\r\n    Y = 1;\r\n  const vectors = [\r\n    [-1, -1],\r\n    [-1, 0],\r\n    [-1, 1],\r\n    [0, -1],\r\n    [0, 1],\r\n    [1, -1],\r\n    [1, 0],\r\n    [1, 1]\r\n  ];\r\n\r\n  for (let i = 0; i < vectors.length; i++) {\r\n    let vector = vectors[i];\r\n    if (m[x + vector[X]] !== undefined) {\r\n      if (m[x + vector[X]][y + vector[Y]] !== undefined) {\r\n        if (m[x + vector[X]][y + vector[Y]].isShip === true) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst parseId = id => {\r\n  if (typeof id === \"string\") {\r\n    const [firstIndex, secondIndex] = id.split(\"-\");\r\n    return [Number(firstIndex), Number(secondIndex)];\r\n  }\r\n};\r\n\r\nexport { parseShipLength, parseShipName, parseId, checkSurroundingCells };\r\n","import React from \"react\";\r\n\r\nimport { useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"../constants.js\";\r\n\r\nimport \"./overlay.css\";\r\n\r\nconst OverlaySlow = ({ color, coord, shipLength }) => {\r\n  const x = coord[1];\r\n\r\n  const displacement = 10 - x - shipLength;\r\n\r\n  const squareHoverStyles = {\r\n    opacity: 0.5,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: displacement * 30,\r\n    backgroundColor: color,\r\n    width: `${30 * shipLength}px`,\r\n    height: \"100%\",\r\n    zIndex: 10\r\n  };\r\n\r\n  return displacement < 0 ? (\r\n    <div style={squareHoverStyles} />\r\n  ) : (\r\n    <>\r\n      <div\r\n        style={{\r\n          ...squareHoverStyles,\r\n          left: 0,\r\n          width: `30px`\r\n        }}\r\n      />\r\n      <OverlayToHide color={color} shipLength={shipLength} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Overlay = React.memo(OverlaySlow);\r\n\r\nexport default Overlay;\r\n\r\nconst OverlayToHide = ({ color, shipLength }) => {\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: [\r\n      ItemTypes.BATTLESHIP,\r\n      ItemTypes.CRUISER,\r\n      ItemTypes.DESTROYER,\r\n      ItemTypes.PATROL_BOAT\r\n    ],\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver()\r\n    })\r\n  });\r\n\r\n  const squareHoverStyles = {\r\n    opacity: 0.5,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    backgroundColor: color,\r\n    left: 30,\r\n    width: `${30 * (shipLength - 1)}px`,\r\n    height: \"100%\",\r\n    zIndex: 10\r\n  };\r\n\r\n  return !isOver ? <div ref={drop} style={squareHoverStyles} /> : null;\r\n};\r\n","import Overlay from \"./overlay.js\"\r\n\r\nexport default Overlay","import React from \"react\";\r\n\r\nimport \"./cell.css\";\r\n\r\nimport { useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"../constants.js\";\r\n\r\nimport { parseId, parseShipLength } from \"../../helpers/index.js\";\r\n\r\nimport Overlay from \"../overlay\";\r\n\r\nconst CellSlow = ({ onClick, value, cellData, canDropShip, placeShip }) => {\r\n  const { isShot, isShip, id, player } = cellData;\r\n\r\n  const isHit = isShip && isShot;\r\n  const isBlank = !isShip && isShot;\r\n\r\n  const onCellClick = () => {\r\n    onClick(id, isShip, player);\r\n  };\r\n\r\n  const placeShipMemo = () => {\r\n    placeShip(id, player, itemType);\r\n  };\r\n\r\n  const canDropShipMemo = () => {\r\n    return canDropShip(id, player, itemType);\r\n  };\r\n\r\n  const [{ isOver, canDrop, itemType }, drop] = useDrop({\r\n    accept: [\r\n      ItemTypes.BATTLESHIP,\r\n      ItemTypes.CRUISER,\r\n      ItemTypes.DESTROYER,\r\n      ItemTypes.PATROL_BOAT\r\n    ],\r\n    canDrop: canDropShipMemo,\r\n    drop: placeShipMemo,\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop(),\r\n      itemType: monitor.getItemType()\r\n    })\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className={`cell\r\n                            ${value ? \"not-clickable\" : \"clickable\"} \r\n                            ${isHit ? \"hit\" : \"\"} \r\n                            ${isBlank ? \"blank\" : \"\"}\r\n                            ${isShip ? \"ship\" : \"\"}`}\r\n      onClick={onCellClick}\r\n    >\r\n      {value}\r\n      {!value && isOver && (\r\n        <Overlay\r\n          color={`${canDrop ? \"orange\" : \"red\"}`}\r\n          coord={parseId(id)}\r\n          shipLength={parseShipLength(itemType)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst doNothing = () => {};\r\n\r\nCellSlow.defaultProps = {\r\n  onClick: doNothing,\r\n  value: false,\r\n  cellData: {\r\n    isShip: false,\r\n    isShot: false,\r\n    player: -1,\r\n    id: -1\r\n  },\r\n  canDropShip: doNothing,\r\n  placeShip: doNothing\r\n};\r\n\r\nconst Cell = React.memo(CellSlow);\r\n\r\nexport default Cell;\r\n","import Cell from \"./cell.js\"\r\n\r\nexport default Cell","import React from \"react\";\r\n\r\nimport \"./gamefield.css\";\r\n\r\nimport Cell from \"../cell\";\r\n\r\nconst fillWithCells = (cellsData, canDropShip, placeShip, onCellClick) => {\r\n  if (cellsData.length > 1) {\r\n    const cells = [];\r\n    const rows = [];\r\n\r\n    for (let i = 0; i < 11; i++) {\r\n      cells[i] = i === 0 ? [null] : [<Cell value={i} />];\r\n      for (let k = 1; k < 11; k++) {\r\n        cells[i][k] =\r\n          i === 0 ? (\r\n            <Cell value={k} />\r\n          ) : (\r\n            <Cell\r\n              cellData={cellsData[i - 1][k - 1]}\r\n              onClick={onCellClick}\r\n              canDropShip={canDropShip}\r\n              placeShip={placeShip}\r\n            />\r\n          );\r\n      }\r\n      rows[i] = <div className=\"row\">{cells[i]}</div>;\r\n    }\r\n    return <div className=\"battlefield\">{rows}</div>;\r\n  } else return <h1>ZHOPA</h1>;\r\n};\r\n\r\nconst doNothing = () => {};\r\n\r\nconst GameFieldSlow = ({\r\n  shipsData,\r\n  shotsData,\r\n  endturn,\r\n  label,\r\n  onCellClick,\r\n  className,\r\n  canDropShip,\r\n  placeShip\r\n}) => {\r\n  const PlayersBattleField = fillWithCells(shipsData, canDropShip, placeShip);\r\n  const OpponentsBattleField = fillWithCells(\r\n    shotsData,\r\n    doNothing,\r\n    doNothing,\r\n    onCellClick\r\n  );\r\n\r\n  return (\r\n    <div className={`gamefield ${className}`}>\r\n      <h1>{label}</h1>\r\n      <div>\r\n        <h1>Opponent's Field</h1>\r\n        {OpponentsBattleField}\r\n      </div>\r\n      <button className=\"endturn\" onClick={endturn}>\r\n        End Turn\r\n      </button>\r\n      <div>\r\n        <h1>Your Field</h1>\r\n        {PlayersBattleField}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameField = React.memo(GameFieldSlow);\r\n\r\nexport default GameField;\r\n","import GameField from \"./gamefield.js\"\r\n\r\nexport default GameField","import React, { useEffect } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\r\n\r\nimport { ItemTypes } from \"../constants.js\";\r\n\r\nimport Cell from \"../cell\";\r\n\r\nconst AddDrag = ({ shipType, children }) => {\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: ItemTypes[shipType] },\r\n    collect: monitor => ({\r\n      isDragging: !!monitor.isDragging()\r\n    })\r\n  });\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true });\r\n  });\r\n  return <div ref={drag}>{children}</div>;\r\n};\r\n\r\nconst cellData = {\r\n  isShip: true,\r\n  isShot: false,\r\n  player: -1,\r\n  id: -1\r\n};\r\n\r\nconst createShip = length => {\r\n  const ship = [];\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    ship[i] = <Cell value cellData={cellData} />;\r\n  }\r\n\r\n  let shipType = \"\";\r\n\r\n  if (length === 1) shipType = \"PATROL_BOAT\";\r\n  if (length === 2) shipType = \"DESTROYER\";\r\n  if (length === 3) shipType = \"CRUISER\";\r\n  if (length === 4) shipType = \"BATTLESHIP\";\r\n\r\n  const customShip = (\r\n    <AddDrag shipType={shipType}>\r\n      <div style={styles}>{ship}</div>\r\n    </AddDrag>\r\n  );\r\n\r\n  return customShip;\r\n};\r\n\r\nconst styles = { display: \"flex\", flexDirection: \"row\" };\r\n\r\nconst Battleship = createShip(4);\r\n\r\nconst Cruiser = createShip(3);\r\n\r\nconst Destroyer = createShip(2);\r\n\r\nconst PatrolBoat = createShip(1);\r\n\r\nexport { Battleship, Cruiser, Destroyer, PatrolBoat };\r\n","import React from \"react\";\r\nimport { useDragLayer } from \"react-dnd\";\r\n\r\nimport { parseShipName, parseShipLength } from \"../../helpers\";\r\n\r\nconst layerStyles = {\r\n  position: \"fixed\",\r\n  pointerEvents: \"none\",\r\n  zIndex: 100,\r\n  left: 0,\r\n  top: 0,\r\n  width: \"100%\",\r\n  height: \"100%\"\r\n};\r\n\r\nconst _imageBase = \"http://127.0.0.1:8080/\";\r\n\r\nconst getItemStyles = (\r\n  initialOffset,\r\n  currentOffset,\r\n  clientOffset,\r\n  itemType\r\n) => {\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: \"none\"\r\n    };\r\n  }\r\n\r\n  let { x, y } = clientOffset;\r\n  // const shipLength = parseShipLength(itemType);\r\n\r\n  // if (Math.abs(window.innerWidth - x) < 30 * shipLength + 5 + 2 * shipLength) {\r\n  //   return {\r\n  //     left: window.innerWidth - 30 * shipLength + 5 + 2 * shipLength,\r\n  //     top: y - 15\r\n  //   };\r\n  // }\r\n  //   const transform = `translate(${x}px, ${y}px)`;\r\n\r\n  //   return {\r\n  //     transform,\r\n  //     WebkitTransform: transform\r\n  //   };\r\n  // console.log(`x : ${x}, y : ${y}`);\r\n  // console.log(`width : ${window.innerWidth}, heigth : ${window.innerHeight}`);\r\n  return {\r\n    left: x,\r\n    top: y - 15\r\n  };\r\n};\r\n\r\nconst CustomDragLayerSlow = () => {\r\n  const {\r\n    itemType,\r\n    isDragging,\r\n    clientOffset,\r\n    initialOffset,\r\n    currentOffset\r\n  } = useDragLayer(monitor => ({\r\n    clientOffset: monitor.getClientOffset(),\r\n    itemType: monitor.getItemType(),\r\n    initialOffset: monitor.getInitialSourceClientOffset(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging()\r\n  }));\r\n\r\n  function renderItem() {\r\n    const shipName = parseShipName(itemType);\r\n    const shipLength = parseShipLength(itemType);\r\n\r\n    return (\r\n      <img\r\n        src={`${_imageBase}${shipName}.png`}\r\n        alt=\"ship_preview\"\r\n        style={{ width: `${30 * shipLength}px` }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!isDragging) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={layerStyles}>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          ...getItemStyles(initialOffset, currentOffset, clientOffset, itemType)\r\n        }}\r\n      >\r\n        {renderItem()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomDragLayer = React.memo(CustomDragLayerSlow);\r\n\r\nexport default CustomDragLayer;\r\n","import CustomDragLayer from \"./custom-drag-layer.js\";\r\n\r\nexport default CustomDragLayer;\r\n","import Game from \"./game.js\"\r\n\r\nexport default Game","import React, { PureComponent } from \"react\";\r\n\r\nimport produce from \"immer\";\r\n\r\nimport \"./game.css\";\r\n\r\nimport GameField from \"../gamefield\";\r\n// import Checking from \"../checking/checking.js\";\r\nimport { Battleship, Cruiser, Destroyer, PatrolBoat } from \"../ships\"\r\n\r\nimport CustomDragLayer from \"../custom-drag-layer\"\r\n\r\nimport { parseShipLength, parseId, checkSurroundingCells } from \"../../helpers\";\r\n\r\n\r\nexport default class Game extends PureComponent {\r\n  state = {\r\n    isYourTurn: true,\r\n    player1ships: \"1\",\r\n    player1shots: \"1\",\r\n    player2ships: \"1\",\r\n    player2shots: \"1\",\r\n    varToChange: 1\r\n  };\r\n\r\n  plusOne = () => {\r\n    this.setState(state => {\r\n      return {\r\n        varToChange: state.varToChange + 1\r\n      };\r\n    });\r\n  };\r\n\r\n  endTurn = () => {\r\n    this.setState(state => {\r\n      return {\r\n        isYourTurn: !state.isYourTurn\r\n      };\r\n    });\r\n  };\r\n\r\n  generateCellsData = () => {\r\n    const player1ships = [],\r\n      player1shots = [],\r\n      player2ships = [],\r\n      player2shots = [];\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      player1ships[i] = [];\r\n      player1shots[i] = [];\r\n      player2ships[i] = [];\r\n      player2shots[i] = [];\r\n      for (let k = 0; k < 10; k++) {\r\n        player1ships[i][k] = {\r\n          isShip: false,\r\n          isShot: false,\r\n          player: 1,\r\n          id: `${i}-${k}`\r\n        };\r\n        player1shots[i][k] = {\r\n          isShip: false,\r\n          isShot: false,\r\n          player: 1,\r\n          id: `${i}-${k}`\r\n        };\r\n        player2ships[i][k] = {\r\n          isShip: false,\r\n          isShot: false,\r\n          player: 2,\r\n          id: `${i}-${k}`\r\n        };\r\n        player2shots[i][k] = {\r\n          isShip: false,\r\n          isShot: false,\r\n          player: 2,\r\n          id: `${i}-${k}`\r\n        };\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      player1ships,\r\n      player1shots,\r\n      player2ships,\r\n      player2shots\r\n    });\r\n  };\r\n\r\n  canDropShip = (id, player, shipType) => {\r\n    const [firstIndex, secondIndex] = parseId(id);\r\n    const shipLength = parseShipLength(shipType);\r\n\r\n    const { player1ships, player2ships } = this.state;\r\n    \r\n    const oldShips = !(player - 1) ? player1ships : player2ships\r\n\r\n      if (secondIndex <= oldShips[firstIndex].length - shipLength) {\r\n        for (let i = 0; i < shipLength; i++) {\r\n          if (oldShips[firstIndex][secondIndex + i].isShip === true) {\r\n            console.log(`Ship is under`);\r\n            return false;\r\n          }\r\n        }\r\n\r\n        for (let i = 0; i < shipLength; i++) {\r\n          if (\r\n            checkSurroundingCells(firstIndex, secondIndex + i, oldShips)\r\n          ) {\r\n            console.log(`Ship is around`);\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      } else {\r\n        const displacement = 10 - secondIndex - shipLength;\r\n        for (let i = displacement; i < shipLength + displacement; i++) {\r\n          if (oldShips[firstIndex][secondIndex + i].isShip === true) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        for (let i = displacement; i < shipLength + displacement; i++) {\r\n          if (\r\n            checkSurroundingCells(firstIndex, secondIndex + i, oldShips)\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    // }\r\n  };\r\n\r\n  placeShip = (id, player, shipType) => {\r\n    const [firstIndex, secondIndex] = parseId(id);\r\n    const shipLength = parseShipLength(shipType);\r\n\r\n    const { player1ships, player2ships } = this.state;\r\n\r\n    const oldShips = !(player - 1) ? player1ships : player2ships,\r\n          shipsName = !(player - 1) ? \"player1ships\" : \"player2ships\"\r\n\r\n      if (secondIndex <= oldShips[firstIndex].length - shipLength) {\r\n        console.log(\"Trying to place deeper\");\r\n        this.setState(\r\n          produce(draft => {\r\n            for (let i = 0; i < shipLength; i++) {\r\n              draft[shipsName][firstIndex][secondIndex + i].isShip = true;\r\n            }\r\n          })\r\n        );\r\n      } else {\r\n        console.log(\"Trying to place in proh\");\r\n        this.setState(\r\n          produce(draft => {\r\n            const displacement = 10 - secondIndex - shipLength;\r\n            console.log(displacement)\r\n            for (let i = displacement; i < shipLength + displacement; i++) {\r\n              draft[shipsName][firstIndex][secondIndex + i].isShip = true;\r\n            }\r\n          })\r\n        );\r\n      }\r\n    // }\r\n  };\r\n\r\n  onClick = (id, isShip, player) => {\r\n    console.log(id);\r\n    console.log(player);\r\n\r\n    const [firstIndex, secondIndex] = parseId(id);\r\n\r\n    const makeShotToCoord = this.makeShot(firstIndex, secondIndex);\r\n\r\n    if (!(player - 1) && !isShip) {\r\n      console.log(\"You pressed on the player's 1 field\");\r\n\r\n      makeShotToCoord(\"player1shots\");\r\n    }\r\n\r\n    if (player - 1 && !isShip) {\r\n      console.log(\"You pressed on the player's 2 field\");\r\n\r\n      makeShotToCoord(\"player2shots\");\r\n    }\r\n  };\r\n\r\n  makeShot = (firstIndex, secondIndex) => {\r\n    return shotsfield => {\r\n      this.setState(\r\n        produce(draft => {\r\n          draft[shotsfield][firstIndex][secondIndex].isShot = true;\r\n        })\r\n      );\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.generateCellsData();\r\n  }\r\n\r\n  endTurnMemo = () => {\r\n    this.endTurn()\r\n  }\r\n\r\n  onClickMemo = (id, isShip, player) => {\r\n    this.onClick(id, isShip, player)\r\n  }\r\n\r\n  canDropShipMemo = (id, player, shipType) => {\r\n    return this.canDropShip(id, player, shipType)\r\n  }\r\n\r\n  placeShipMemo = (id, player, shipType) => {\r\n    this.placeShip(id, player, shipType)\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      isYourTurn,\r\n      player1ships,\r\n      player1shots,\r\n      player2ships,\r\n      player2shots\r\n    } = this.state;\r\n\r\n    const fortStyles = {\r\n      border: \"3px solid black\",\r\n      width: \"250px\",\r\n      height: \"150px\"\r\n    };\r\n\r\n    return (\r\n      <>\r\n      <div className=\"game\">\r\n        <GameField\r\n          label={\"Player 1\"}\r\n          endturn={this.endTurnMemo}\r\n          shipsData={isYourTurn ? player1ships : player2ships}\r\n          shotsData={isYourTurn ? player1shots : player2shots}\r\n          onCellClick={this.onClickMemo}\r\n          canDropShip={this.canDropShipMemo}\r\n          placeShip={this.placeShipMemo}\r\n        />\r\n\r\n        {/* <Checking counter={this.state.varToChange} plusOne={() => this.plusOne}/> */}\r\n\r\n        <div style={fortStyles}>\r\n          <h4>Place your ships</h4>\r\n          {/* <Battleship /> */}\r\n          {/* <Cruiser /> */}\r\n          {/* <Destroyer /> */}\r\n          {/* <PatrolBoat /> */}\r\n          {Battleship} \r\n          {Cruiser }\r\n          {Destroyer }\r\n          {PatrolBoat} \r\n        </div>\r\n      <CustomDragLayer/>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport HTML5Backend from \"react-dnd-html5-backend\"\r\n\r\nimport './App.css';\r\nimport \"./reset.css\";\r\n// import \"../../helpers/bootstrap.css\"\r\n\r\nimport Game from \"../game\"\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <DndProvider\r\n        backend={HTML5Backend}\r\n    >\r\n      <div className=\"App\">\r\n        <Game/>\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}